% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyze_representatives.R
\name{analyze_representatives}
\alias{analyze_representatives}
\title{Analyze the data point memberships of multiple representative (co)cycles.}
\usage{
analyze_representatives(
  diagrams,
  dim,
  num_points,
  plot_heatmap,
  return_contributions
)
}
\arguments{
\item{diagrams}{a list of persistence diagrams, either the output of persistent homology calculations like \code{\link[TDA]{ripsDiag}}/\code{\link[TDAstats]{calculate_homology}}/\code{\link{PyH}}, or \code{\link{diagram_to_df}}.}

\item{dim}{the integer homological dimension of representatives to consider.}

\item{num_points}{the integer number of data points in all the original datasets (from which the diagrams were calculated).}

\item{plot_heatmap}{a boolean representing if a heatmap of data point membership similarity of the representatives should be plotted, default `TRUE`. A dendrogram of hierarchical clustering is plotted, and rows (representatives) are sorted according to this clustering.}

\item{return_contributions}{a boolean indicating whether or not to return the membership contributions (i.e. percentages) of the data points (1:`num_points`) across all the representatives, default `FALSE`.}
}
\value{
either a matrix of data point contributions to the representatives, or a list with elements "memberships" (the matrix) and "contributions" (a vector of membership percentages for each data point across representatives).
}
\description{
Multiple datasets with corresponding data points can contain the same topological features. 
Therefore we may wish to compare many representative (co)cycles across datasets to decide if their topological features are the same.
The `analyze_representatives` function returns a matrix of binary datapoint memberships in an input list of representatives across datasets.
Optionally this matrix can be plotted as a heatmap with rows (i.e. representatives) reordered by similarity, and the 
contributions (i.e. percentage membership) of each point in the representatives can also be returned.
}
\details{
The clustering dendrogram can be used to determine if there are any similar groups of representatives (i.e.
shared topological features across datasets) and if so how many.
}
\examples{

if(require("TDA"))
{
  # sample the unit circle
  df <- TDA::circleUnif(n = 50)
                        
  # create 10 copies with added Gaussian noise and
  # calculate their diagrams
  circs <- lapply(X = 1:10,FUN = function(X){
     df <- circ
     df$x <- df$x + rnorm(n = 50,sd = 0.05)
     df$y <- df$y + rnorm(n = 50,sd = 0.05)
     diag <- bootstrap_persistence_thresholds(X = as.matrix(dist(df)),
                                              FUN = "ripsDiag",maxdim = 1,
                                              thresh = 2,distance_mat = T,
                                              calculate_representatives = T,
                                              return_subsetted = T)
     return(diag)
  
   })
   
   # analyze loop representatives across the diagrams
   # num_points is 50 because each underlying dataset had
   # 50 (corresponding) points
   analyze_representatives(diagrams = circs,dim = 1,
                           num_points = 50)
  
 }
}
\author{
Shael Brown - \email{shaelebrown@gmail.com}
}
