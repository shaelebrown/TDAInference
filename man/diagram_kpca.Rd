% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/machine_learning.R
\name{diagram_kpca}
\alias{diagram_kpca}
\title{Calculate the kernel PCA embedding of a group of persistence diagrams}
\usage{
diagram_kpca(
  diagrams,
  dim = 0,
  t = 1,
  sigma = 1,
  features = 1,
  num_workers = parallelly::availableCores(omit = 1),
  ...
)
}
\arguments{
\item{diagrams}{a list of persistence diagrams, as the output of a TDA calculation.}

\item{dim}{the homological dimension in which the distance is to be computed.}

\item{t}{the positive scale for the persistence Fisher kernel, default 1.}

\item{sigma}{a positive number representing the bandwith for the Fisher information metric, default 1}

\item{features}{number of features (principal components) to return, default 1.}

\item{num_workers}{the number of cores used for parallel computation, default is one less the number of cores on the machine.}

\item{...}{additional parameters.}
}
\value{
a list containing 

\describe{

\item{pca}{the output of \code{\link[kernlab]{kpca}} on the Gram matrix, an S4 object containing the slots pcv (a matrix containing the principal component vectors (column wise)), eig (the corresponding eigenvalues), rotated (the original data projected (rotated) on the principal components) and xmatrix (the original data matrix).}

\item{diagrams}{the input `diagrams` argument.}

\item{t}{the input `t` argument.}

\item{sigma}{the input `sigma` argument.}

\item{dim}{the input `dim` argument.}

}
}
\description{
Returns the output of cmdscale on the desired distance matrix of a group of persistence diagrams
in a particular dimension.
}
\details{
The `diagrams` parameter should be a list of persistence diagrams computed from TDA.
The `dim` parameter should be a positive finite integer.
The `sigma` and `t` parameters are the positive bandwith for the Fisher information metric and
the positive scale for the persistence Fisher kernel respectively. `num_workers` is the
number of cores used for parallel computation.
`features` is the number of desired features (principal components) in the embedding, and
`...` are additional parameters to the kpca kernlab function.
}
\examples{

# create nine diagrams from three base diagrams
g <- generate_TDAML_test_data(3,3,3)

# calculate their 2D PCA embedding with sigma = t = 2
pca <- diagram_kpca(diagrams = g,dim = 0,t = 2,sigma = 2,features = 2,num_workers = 2)
}
\seealso{
\code{\link{predict_diagram_kpca}} for predicting embedding coordinates of new diagrams.
}
\author{
Shael Brown - \email{shaelebrown@gmail.com}
}
