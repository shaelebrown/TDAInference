% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/machine_learning.R
\name{diagram_nearest_clusters}
\alias{diagram_nearest_clusters}
\title{Find the nearest kkmeans cluster center to a list of new diagrams to return approximate cluster labels}
\usage{
diagram_nearest_clusters(new_diagrams, clustering)
}
\arguments{
\item{new_diagrams}{a list of persistence diagrams, as the output of a TDA calculation like ripsDiag or \code{\link{diagram_to_df}}.}

\item{clustering}{the output of a \code{link{diagram_kkmeans}} function call.}
}
\value{
a vector of the predicted cluster labels for the new diagrams.
}
\description{
Returns the nearest kkmeans cluster center labels on the desired Gram matrix of a group of persistence diagrams
in a particular dimension.
}
\details{
The `new_diagrams` parameter should be a list of persistence diagrams computed from a TDA calculation like ripsDiag or from a 
\code{\link{diagram_to_df}} function call, and the
`clustering` parameter should be the output of a \code{\link{diagram_kkmeans}} function call.
}
\examples{

# create ten diagrams with package TDA based on 2D Gaussians
g <- lapply(X = 1:10,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

# calculate kmeans clusters with centers = 2 in dimension 1 with sigma = t = 2
clusters <- diagram_kkmeans(diagrams = g,centers = 2,dim = 1,t = 2,sigma = 2)

# predict the nearest cluster for all diagrams in g
nearest_clusters <- diagram_nearest_clusters(new_diagrams = g,clustering = clusters)
}
