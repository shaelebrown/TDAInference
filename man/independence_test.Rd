% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{independence_test}
\alias{independence_test}
\title{Independence test for persistence diagrams}
\usage{
independence_test(g1, g2, dims = c(0, 1), sigma = 1, t = 1, verbose = FALSE)
}
\arguments{
\item{g1}{the first group of persistence diagrams, outputted from a homology calculation in TDA.}

\item{g2}{the second group of persistence diagrams, outputted from a homology calculation in TDA.}

\item{dims}{a numeric vector of the homological dimensions in which the test is to be carried out. Default value is c(0,1).}

\item{sigma}{the positive bandwith for the Fisher information metric, default 1.}

\item{t}{the positive scale for the persistence Fisher kernel, default 1.}

\item{verbose}{a boolean flag for if the time duration of the function call should be printed. Default value is False.}
}
\value{
list with dimensions used (named vector), test statistics in each dimension (named vector)
                  a p-value for each dimension (all stored in a named vector) and the time duration of the function call.
}
\description{
Calculates (an estimate of) the Hilbert-Schmidt independence criteria for 
two groups of paired persistence diagrams, the approximate null distribution
and a p-value for each desired homological dimension.
This function computes kernel calculations in parallel since they
can individually take a long time.
}
\details{
The `g1` and `g2` parameters should be lists of persistence diagrams, outputted from a
homology calculation in TDA. `dims` is a numeric vector of the homological dimensions in which
to carry out the test. The `sigma` parameter is the positive bandwith for the
Fisher information metric, `t` is the scale parameter for the persistence Fisher kernel. 
`verbose` determines if the time duration of the function call should be printed.
}
\examples{

# create two groups of persistence diagrams on 2D Gaussians using TDA
g1 <- lapply(X = 1:6,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

g2 <- lapply(X = 1:6,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

# do independence test with sigma = 1, t = 1, in dimensions 0 and 1, printing the time duration
ind_test = independence_test(g1,g2,verbose = TRUE)
}
