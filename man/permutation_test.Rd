% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation_test.R
\name{permutation_test}
\alias{permutation_test}
\title{Permutation test for persistence diagrams}
\usage{
permutation_test(
  ...,
  iterations = 100,
  p = 2,
  q = 2,
  dims = c(0, 1),
  paired = F,
  distance = "wasserstein",
  verbose = FALSE
)
}
\arguments{
\item{...}{groups of persistence diagrams, outputted from a homology calculation in TDA.}

\item{iterations}{nthe umber of iterations for permuting group labels.}

\item{p}{the wasserstein parameter, number at least 1 (and bottleneck distance if == Inf).}

\item{q}{a finite number at least 1 for exponentiation in Turner loss function.}

\item{dims}{a numeric vector of the homological dimensions in which the test is to be carried out.}

\item{paired}{a boolean flag for if there is a second-order pairing between diagrams at the same index in different groups.}

\item{distance}{a string which determines which type of distance calculation to carry out, either "wasserstein" (default) or "Turner".}

\item{verbose}{a boolean flag for if the time duration of the function call should be printed.}
}
\value{
list with dimensions used (named vector), permutation loss values in each dimension (named list), test statistics in each dimension (named vector)
                  a p-value for each dimension (all stored in a named vector) and the time duration of the function call.
}
\description{
Calculates the turner loss function for a number of groups of persistence diagrams,
and then generates a null distribution by permuting group labels several times and
recomputing the loss function. A p-value for each desired homological dimension is generated.
This function keeps track of distance calculations as to not repeat calculations
which can individually take a long time.
}
\details{
The `...` parameter should be a list of lists of persistence diagrams, outputted from a
homology calculation in TDA. The `iterations` parameter should be the number of permutations
desired for generating the null distribution. The `p` parameter is the wasserstein power, and `q`
is the exponent for distances. `dims` is a numeric vector of the homological dimensions in which
to carry out the test. The `paired` parameter is a boolean flag for whether there are correspondences
between diagrams at the same location across groups, as this affects which permutations are permissible
when generating the null distribution. The `distance` parameter determines which distance metric
should be used between persistence diagrams. `verbose` determines if the time duration of the
function call should be printed.
}
\examples{

# create three groups of persistence diagrams on 2D Gaussians using TDA
g1 <- lapply(X = 1:3,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

g2 <- lapply(X = 1:3,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

g3 <- lapply(X = 1:3,FUN = function(X){

diag <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
df <- diagram_to_df(d = diag)
return(df)

})

# do permutation test with 20 iterations, p,q = 2, in dimensions 0 and 1, with
# no pairing using Turner distance and printing the time duration
perm_test = permutation_test(g1,g2,g3,
iterations = 20,
distance = "Turner",
verbose = TRUE)
}
