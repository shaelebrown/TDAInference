% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation_test.R
\name{permutation_test}
\alias{permutation_test}
\title{Permutation test for persistence diagrams}
\usage{
permutation_test(
  ...,
  iterations = 100,
  p = 2,
  q = 2,
  dims = c(0, 1),
  paired = F,
  lib = "TDA",
  distance = "wasserstein",
  verbose = FALSE
)
}
\arguments{
\item{...}{groups of persistence diagrams, outputted from a homology calculation in TDA or TDAstats}

\item{iterations}{number of iterations for permuting group labels}

\item{p}{wasserstein parameter, number at least 1 (and bottleneck distance if == Inf)}

\item{q}{finite number at least 1 for exponentiation in Turner loss function}

\item{dims}{homological dimensions in which the test is to be carried out}

\item{paired}{if there is a second-order pairing between diagrams at the same index in different groups}

\item{lib}{either "TDA" or "TDAstats" for consistency}

\item{distance}{either "wasserstein" or "Turner" for determining which distance of diagrams to use}

\item{verbose}{if the time duration of the function call should be printed}
}
\value{
list with dimensions used (named vector), permutation loss values in each dimension (named list), test statistics in each dimension (named vector)
                  a p-value for each dimension (all stored in a named vector) and the time duration of the function call.
}
\description{
Calculates the turner loss function for a number of groups of persistence diagrams
and then permutes group labels several times and recomputes the loss function
to generate a null distribution and calculate a p value for each desired dimension.
This function keeps track of distance calculations as to not repeat calculations
which can individually take a long time.
}
\details{
The `mat` parameter should be a numeric matrix with each row corresponding
to a single point, and each column corresponding to a single dimension. Thus,
if `mat` has 50 rows and 5 columns, it represents a point cloud with 50 points
in 5 dimensions. The `dim` parameter should be a positive integer.
Alternatively, the `mat` parameter could be a distance matrix (upper
triangular half is ignored); note: `format` should be specified as "ldm".
}
\examples{

# create three groups of persistence diagrams on 2D Gaussians using TDA
g1 <- lapply(X = 1:3,FUN = function(X){

gauss <- data.frame(x = rnorm(100,mean = 0,sd = 1),y = rnorm(100,mean = 0,sd = 1))
diag <- TDA::ripsDiag(gauss,maxscale = 1,maxdimension = 1)
df <- TDA_diagram_to_df(d = diag)
return(list(diag = df,ind = X))

})

g2 <- lapply(X = 1:3,FUN = function(X){

gauss <- data.frame(x = rnorm(100,mean = 0,sd = 1),y = rnorm(100,mean = 0,sd = 1))
diag <- TDA::ripsDiag(gauss,maxscale = 1,maxdimension = 1)
df <- TDA_diagram_to_df(d = diag)
return(list(diag = df,ind = X + 3))

})

g3 <- lapply(X = 1:3,FUN = function(X){

gauss <- data.frame(x = rnorm(100,mean = 0,sd = 1),y = rnorm(100,mean = 0,sd = 1))
diag <- TDA::ripsDiag(gauss,maxscale = 1,maxdimension = 1)
df <- TDA_diagram_to_df(d = diag)
return(list(diag = df,ind = X + 6))

})

# do permutation test with 20 iterations, p,q = 2, in dimensions 0 and 1, with
# no pairing using Turner distance and printing the time duration
perm_test = permutation_test(g1,g2,g3,iterations = 20,distance = "Turner",verbose = TRUE)
}
