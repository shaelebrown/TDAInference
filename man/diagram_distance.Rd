% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance_calculations.R
\name{diagram_distance}
\alias{diagram_distance}
\title{Calculate distances between pairs of persistence diagrams}
\usage{
diagram_distance(D1, D2, dim, p = 2, distance = "wasserstein", sigma = 1)
}
\arguments{
\item{D1}{the first persistence diagram, either computed from TDA or converted to a data frame with diagram_to_df.}

\item{D2}{the second persistence diagram, either computed from TDA or converted to a data frame with diagram_to_df.}

\item{dim}{the homological dimension in which the distance is to be computed.}

\item{p}{the wasserstein power parameter. Default value is 2.}

\item{distance}{a string which determines which type of distance calculation to carry out, either "wasserstein" (default) or "fisher".}

\item{sigma}{either NULL (default) or a positive number representing the bandwith for the Fisher information metric}
}
\value{
the numeric value of the distance calculation.
}
\description{
Calculates the distance between a pair of persistce diagrams in a particular homological dimension,
either the output from a \code{\link{diagram_to_df}} function call or from a TDA homology calculation like ripsDiag.
Different TDA sources define distances
differently, and this function has functionality to compute distances like
in the R package TDA (based on the C++ library Dionysus, see
\url{https://mrzv.org/software/dionysus2/}) or like in the
paper for kernel calculations of persistence diagrams (
\url{https://proceedings.neurips.cc/paper/2018/file/959ab9a0695c467e7caf75431a872e5c-Paper.pdf}).
}
\details{
The `D1` and `D2` parameters should be persistence diagrams, outputted
from a homology calculation in the package TDA, or such a
persistence diagram converted to a data frame via the function \code{\link{diagram_to_df}}.
The `dim` parameter should be a positive finite integer.
The `p` parameter should be a positive integer or Inf. The `distance` parameter
should be a string, either "wasserstein" or "fisher". The `sigma` parameter is a single positive number representing the bandwith for the Fisher information metric.
}
\examples{

# create two diagrams with package TDA based on 2D Gaussians
diag1 <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)
diag2 <- TDA::ripsDiag(data.frame(x = rnorm(100,mean = 0,sd = 1),
y = rnorm(100,mean = 0,sd = 1)),
maxscale = 1,
maxdimension = 1)

# calculate their wasserstein distance
wass <- diagram_distance(D1 = diag1,D2 = diag2,dim = 1,p = 2,distance = "wasserstein")

# calculate their bottleneck distance
bottleneck <- diagram_distance(D1 = diag2,D2 = diag2,dim = 1,p = Inf,distance = "wasserstein")

# repeat wasserstein calculation but with diagrams converted to data frames
diag1_df <- diagram_to_df(d = diag1)
diag2_df <- diagram_to_df(d = diag2)
wass_df <- diagram_distance(D1 = diag1_df,D2 = diag2_df,dim = 1,p = 2,distance = "wasserstein")

# now do Fisher information metric calculation
fisher_df <- diagram_distance(D1 = diag1_df,D2 = diag2_df,dim = 1,distance = "fisher",sigma = 1)
}
\references{
Robinson T, Turner K (2017). "Hypothesis testing for topological data analysis." \url{https://link.springer.com/article/10.1007/s41468-017-0008-7}.

Le T, Yamada M (2018). "Persistence fisher kernel: a riemannian manifold kernel for persistence diagrams." \url{https://proceedings.neurips.cc/paper/2018/file/959ab9a0695c467e7caf75431a872e5c-Paper.pdf}.
}
\author{
Shael Brown - \email{shaelebrown@gmail.com}
}
